const config = require('config')
const baseUrl = config.baseUrl
const creds = config.creds.regularUser

const { By } = require('selenium-webdriver');
const z = require('./common');
const scenario = z.scenario;
const driver = z.getDriver();

driver
.then( _ => z.scenario('Sign-in successfully leads to Editor') )
.then( _ => z.openPage(baseUrl + '/user/login', 'login page') )
.then( _ => z.maximizeWindow() )
.then( _ => z.inputById('edit-name', creds.user) )
.then( _ => z.inputById('edit-pass', creds.password) )
.then( _ => z.clickById('edit-submit') )
.then( _ => z.waitFor(3))
.then( _ => z.assertExists(By.css('#s2id_domain_selection > a > span'), "Editor" ) )
.catch( z.failedScenario )

driver
scenario('Checking that it is possible to add other assistants to the app')
.then( _ => z.openPage(baseUrl + '/new')) 
.then( _ => z.maximizeWindow() )
.then( _ => z.clickById('menu_new'))
.then( _ => z.assertExistsById('org-name', 'company name field') )
.then( _ => z.waitFor(3))
.then( _ => z.clickByCss('#s2id_industry_select b'))
.then( _ => z.clickByCss('body > div.select2-drop.select2-drop-active > ul > li:nth-child(2)')) 
.then( _ => z.clickById('btnNext')) 
.then( _ => z.inputById('org-name', 'My'))
.then( _ => z.waitFor(4))
.then( _ => z.clickByCss('#organizationTab > div.form-horizontal > div > ul > li:nth-child(1) > a'))                                         
.then( _ => z.clickByClassName('btn  button-next'))
.then( _ => z.waitFor(2))
.then( _ => z.clickByClassName('device device-chatbot'))
.then( _ => z.clickByClassName('device device-google-home'))
.then( _ => z.scrollToBottom())
.then( _ => z.clickByClassName('btn  button-next'))
.then( _ => z.waitFor(8))
.then( _ => z.clickById('closeTopMessageBar'))
.then( _ =>z.clickByClassName('publish-btn btn editor'), 'the Customize button')
.then( _ => z.assertExists(By.css('#s2id_domain_selection > a > span'), "Editor" ) )
.catch( z.failedScenario )

driver
.then( _ => z.scenario(' Clicking the configuration button opens the Production part of the Configuration tab') )
.then( _ => z.clickById('btnMyApps', 'configuration button')  )
.then( _ => z.waitFor(2))
//.then( _ => driver.switchTo().alert().accept() ) 
.then( _ => z.waitFor(2))
.then( _ => z.assertExistsById('name'), 'the production tab')
.catch( z.failedScenario )

driver
.then( _ => z.scenario('Clicking the Staging button opens the Staging subtab') )
.then( _ => z.waitFor(2))
.then( _ => z.scrollToTop())
.then( _ => z.clickByCss('#tab-3link>a'))
//.then( _ => driver.switchTo().alert().accept() ) 
.then( _ => z.assertExistsById('name_stg'), 'the staging tab opened')
.catch( z.failedScenario )

.then( _ => z.scenario('It is possible to add languages to the app') )
.then( _ => z.inputByCss('#s2id_languages_stg input.select2-input', 'de'))
.then( _ => z.waitFor(2))
.then( _ => z.clickByCss('.select2-results .select2-match'))
.then( _ => z.clickById('btnSave'))
.then( _ => z.waitFor(3))
.then( _ => z. clickByCss('#btnEdit > i'))
.then( _ => z.waitFor(5))
.then( _ => z.assertExistsByCss('.lang[lang="de"]'), 'German language')
.catch( z.failedScenario )

.then( _ => z.scenario('It is possible to enter Google developer access token in the corresponding field') )
.then( _ => z.clickById('btnMyApps', 'configuration button')  )
.then( _ => z.clickByCss('#tab-3link>a'))
.then( _ => z.clickById('menu_btn_google_stg'))
.then( _ => z.waitFor(5))
.then( _ => z.inputById('google_dev_access_token_stg', '02077633ec12471385a52d6ffb97e08c'))
.then( _ => z.clickById('btnSave'))
.then( _ => z.clickById('btnEdit'))
.then( _ => z.waitFor(4))
.then( _ => z.clickById('btnMyApps', 'configuration button')  )
.then( _ => z.clickByCss('#tab-3link>a'))
.then( _ => z.clickById('menu_btn_google_stg'))
.then( _ => z.waitFor(4))
.then( _ => z.assertContainsValue(By.id('google_dev_access_token_stg'), "the expected text in the element", '02077633ec12471385a52d6ffb97e08c') )
.catch(z.failedScenario)

.then( _ => z.scenario('It is possible to change NLU engine to DialogFlow and enter the necessary values') )
.then( _ => z.clickById('menu_btn_nlu_stg'))
.then( _ => z.clickByCss('#s2id_con_engine_stg > a > span'))
.then( _ => z.clickByCss('body > div.select2-drop.select2-drop-active > ul > li:nth-child(2)')) 
.then( _ => z.inputById('api_ai_token_stg', 'bd450b5fef1842f982f5469aaf98e61b'))
.then( _ => z.inputById('api_ai_dev_token_stg', '02077633ec12471385a52d6ffb97e08c'))
.then( _ => z.clickById('btnSave'))
.then( _ => z.clickById('btnEdit'))
.then( _ => z.waitFor(4))
.then( _ => z.clickById('btnMyApps', 'configuration button')  )
.then( _ => z.clickByCss('#tab-3link>a'))
.then( _ => z.clickById('menu_btn_google_stg'))
.then( _ => z.assertContainsValue(By.id('api_ai_token_stg'), "the expected text in the element", 'bd450b5fef1842f982f5469aaf98e61b') )
.then( _ => z.assertContainsValue(By.id('api_ai_dev_token_stg'), "the expected text in the element", '02077633ec12471385a52d6ffb97e08c') )
.then( _ => z.clickById('btnClearCache'))
.then( _ => z.waitFor(2))
.catch(z.failedScenario)

.then( _ => z.scenario('It is possible to enter an intent to a new language') )
.then( _ => z.clickById('btnEdit'))
.then( _ => z. clickByCss('.lang[lang="de"]'))
.then( _ => z.clickById ('bigNewIntentBtn'))
.then( _ => z.clickByCss ('.preintent[name="OpeningHours"]'))
.then( _ => z.waitFor(3))
.then( () => z.assertExistsByCss(('.intent_div[name="OpeningHours"] a.deleteIntentButton'), 'Delete intent button') )
.then( _ => z.clickById ('btnSave'))
.then( _ => z.waitFor(30))
.catch( z.failedScenario )

.then( _ => z.scenario('It is possible to enter a sample in German') )
.then( _ => z.inputByCss ('.intent_div[name="OpeningHours"] .samples_div input', 'Wann offnen Sie'))
.then( _ => z.clickByCss ('.intent_div[name="OpeningHours"] div.samples_div i[title="Add Sample"]') )
.then( _ => z.waitFor(2))
.then( _ => z.clickById ('btnSave'))
.then( _ => z.waitFor(25))
.then( _ => z.clickById ('btnReset'))
.then( _ => z.waitFor(7))
.then( _ => z.assertContainsText(By.css('.intent_div[name="OpeningHours"] div.samples_div .samples_tr:first-child .sample_content span.sampleSpan'), "the expected text in the element", 'Wann offnen Sie') )
.catch( z.failedScenario )

.then( _ => z.scenario('It is possible to enter text response in German') )
.then( _ => z.clickByCss ('.panel[name="OpeningHours"]  .action-link[action-name="text"]'))
.then( _ => z.inputByCss('.modal-content input.textRes_input.form-control', 'Um 6 Uhr')) 
.then( _ => z.clickByCss('#actionsEditor div.modal-body.actionDiv.form-horizontal  i.fa-plus-square'))
.then( _ => z.clickById ('updateAction')) 
.then( _ => z.clickById ('btnSave'))
.then( _ => z.waitFor(20)) 

.catch( z.failedScenario )


.then( _ => z.scenario('It is possible to do Sync to Dialog flow by clicking the corresponding button') )
.then( _ => z.clickByCss('div.btn-group.publish-narrow-screen-group > button'))
.then( _ => z.clickByLinkText('Sync Engine Model to Google'))
.then( _ => z.waitFor(30))
.then( _ => driver.switchTo().frame("chatbot_simulator"))
.then( _ => z.clickById ('menuBtn'))
.then( _ => z.clickById ('langBtn'))
.then( _ => z. clickByCss('.lang[lang="de"]'))
.then( _ => z.clickById ('menuBtn'))
.then( _ => z.inputById('input','Wann offnen Sie'))
.then( _ => z.waitFor(4))
.then( _ => z.clickByClassName('submitBtn form-control c1Icon c1Icon-paper-plane'))
.then( _ => z.waitFor(6))
.then( () => z.assertContainsText(By.id('conv-wrap'), "the expected text in the element", 'Um 6 Uhr') )
.catch( z.failedScenario )

//Adding a language from the Editor
.then( _ => z.scenario('Clicking the Add button opens the language selection window') )
.then( _ => driver.switchTo().defaultContent())
.then( _ => z.clickByClassName('addLang'))
.then( _ => z.assertExistsById('s2id_defaultLanguage'), 'the default language field')
.catch( z.failedScenario )

.then( _ => z.scenario('The selected language is added and saved') )
.then( _ => z.clickById('s2id_languages'))
.then( _ => z.clickByCss('body > div.select2-drop.select2-drop-active > ul > li:nth-child(1)')) 
.then( _ => z.clickById ('saveAddLang'))
.then( _ => z.clickById ('btnSave'))
.then( _ => z.waitFor(20)) 
.then( _ => z.clickById ('btnReset'))
.then( _ => z.waitFor(2))
.then( _ => z.assertExistsByCss('.lang[lang="pt-BR"]'), 'the newly-added language')
.catch( z.failedScenario )